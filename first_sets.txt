FIRST(additive) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(additive') = { +, -, ϵ }
FIRST(arg_list) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(arg_list') = { ,, ϵ }
FIRST(args) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT, ϵ }
FIRST(assign_expr) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(block) = { { }
FIRST(decl) = { bool, float, int, void }
FIRST(decl_list) = { bool, float, int, void }
FIRST(decl_list') = { bool, float, int, void, ϵ }
FIRST(else_stmt) = { else, ϵ }
FIRST(equality) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(equality') = { !=, ==, ϵ }
FIRST(expr) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(expr_stmt) = { !, (, -, ;, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(extern) = { bool, float, int, void }
FIRST(extern_list) = { bool, float, int, void }
FIRST(extern_list') = { ϵ }
FIRST(fun_decl) = { bool, float, int, void }
FIRST(if_stmt) = { if }
FIRST(local_decl) = { bool, float, int }
FIRST(local_decls) = { bool, float, int, ϵ }
FIRST(logic_and) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(logic_and') = { &&, ϵ }
FIRST(logic_or) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(logic_or') = { ||, ϵ }
FIRST(multiply) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(multiply') = { %, *, /, ϵ }
FIRST(param) = { bool, float, int }
FIRST(param_list) = { bool, float, int }
FIRST(param_list') = { ,, ϵ }
FIRST(params) = { bool, float, int, void, ϵ }
FIRST(primary) = { (, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(program) = { bool, float, int, void }
FIRST(relation) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(relation') = { <, <=, >, >=, ϵ }
FIRST(return_stmt) = { return }
FIRST(stmt) = { !, (, -, ;, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT, if, return, while, { }
FIRST(stmt_list) = { !, (, -, ;, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT, if, return, while, {, ϵ }
FIRST(type_spec) = { bool, float, int, void }
FIRST(unary) = { !, (, -, BOOL_LIT, FLOAT_LIT, IDENT, INT_LIT }
FIRST(var_decl) = { bool, float, int }
FIRST(var_type) = { bool, float, int }
FIRST(while_stmt) = { while }